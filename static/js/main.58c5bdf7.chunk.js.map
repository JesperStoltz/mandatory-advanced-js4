{"version":3,"sources":["Score/Score.js","Score/Highscore.js","Game/Game.js","Login/Login.js","App.js","serviceWorker.js","index.js"],"names":["Score","react_default","a","createElement","className","this","props","winner","Component","Highscore","username1","username2","score1","score2","Game","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","startUp","array","r","row","c","push","setState","board","changePlayerTurn","playerTurn","state","renderPlayerToken","tr","i","key","map","td","j","onClick","id","player","column","table","toConsumableArray","newBoard","addLast","lastIndexOf","checkHorizontally","checkVertically","checkDiagonalLeft","checkDiagonalRight","checkDraw","reset","console","log","gameOver","Fragment","src_Score_Highscore","src_Score_Score","Login","setPlayer1","e","target","value","setPlayer2","type","onChange","src_Game_Game","App","src_Login_Login","Boolean","window","location","hostname","match","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.58c5bdf7.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport \"./Score.css\";\r\n\r\nclass Score extends Component {\r\n  render() {\r\n    return (\r\n        <div className=\"score_container\">\r\n            <p className=\"score_text\">And the winner is...</p><br/>\r\n            <p className=\"score_winnerText\">{this.props.winner}</p><br/>\r\n            <p className=\"score_next\">Click on the eraser to play again!</p>\r\n        </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Score;\r\n","import React, { Component } from 'react';\r\nimport \"./Highscore.css\";\r\n\r\nclass Highscore extends Component {\r\n    render(){\r\n            return (\r\n                <div className=\"highscore_container\">\r\n                    <table>\r\n                        <thead>\r\n                            <tr>\r\n                                <td className=\"playerTitle\">{this.props.username1}</td>\r\n                                <td className=\"playerTitle\">{this.props.username2}</td>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            <tr>\r\n                                <td className=\"playerScore\">{this.props.score1}</td>\r\n                                <td className=\"playerScore\">{this.props.score2}</td>\r\n                            </tr>\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n            )\r\n    }\r\n}\r\n\r\nexport default Highscore;","import React, { Component } from 'react';\r\nimport './Game.css';\r\nimport Score from \"../Score/Score.js\"\r\nimport Highscore from \"../Score/Highscore.js\"\r\n\r\n/*\r\nDRAW:\r\nFyll de tre raderna längst till vänster.\r\nLägg en token längst till höger.\r\nfortsätt sedan fylla på från rad 4 från vänster\r\n\r\n*/\r\n\r\n\r\nclass Game extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state={\r\n            board: [], //Will contain the board of the game\r\n            playerTurn: 1, //Sets the starting player to 1(out of 2)\r\n            username1: this.props.username1,\r\n            username2: this.props.username2,\r\n            winner: \"\",\r\n            score1: 0,\r\n            score2: 0,\r\n            gameOver: false\r\n        }\r\n    }\r\n    startUp = () => {\r\n        let array = []; //Array to contain the board to be set as the state.board.\r\n        for (let r=0; r<7; r++) { //Creates the 'rows' of the board, but is visually turned into columns after css is applied.\r\n            let row = []; //Array representing the row.\r\n            for (let c=0; c<6; c++){ //Creates the 'colums' of the board, but is visually turned into columns after css is applied.\r\n                row.push(0); //Pushes a zero into each index of the array, creating the \"column\"\r\n            }\r\n            array.push(row) //Pushes the rows created above into the array created at the top of the function.\r\n        }\r\n        this.setState({\r\n            board: array, //Puts the array at the state.board, meaning the state.board now contains a gameboard.\r\n          })\r\n    }\r\n    componentDidMount(){\r\n        this.startUp(); //Once the component is opened and ran, the above startUpInit is ran and the board is created. \r\n    }\r\n    changePlayerTurn = () => { //Method that changes the player when you click to place a gametoken.\r\n        this.setState({\r\n            playerTurn: this.state.playerTurn === 2 ? 1 : 2 //If player2 is true, then it turns to 1. If player2 is false, it's put to 2.\r\n        })\r\n    }\r\n    renderPlayerToken = (tr, i) => { //Method to render the playerToken.\r\n        return (\r\n            <tr key={i}>\r\n                {tr.map((td, j) => <td key={j} className=\"boardBox\">\r\n                    <div className={\"circle player\"+td} onClick={() => this.onClick(i)}>{}</div>    \r\n                </td>)}\r\n            </tr>\r\n        )\r\n    }\r\n    checkVertically(board) {\r\n        for (let r = 0; r < 7; r++) {\r\n          for (let c = 0; c < 5; c++) {\r\n            if (board[r][c]) {\r\n              if (board[r][c] === board[r][c + 1] && \r\n                  board[r][c] === board[r][c + 2] &&\r\n                  board[r][c] === board[r][c + 3]) {\r\n\r\n                  if (this.state.playerTurn === 1) {\r\n                      this.setState({\r\n                        winner: this.props.username1,\r\n                        score1: this.state.score1 + 1,\r\n                        gameOver: true\r\n                      })\r\n                  } else if (this.state.playerTurn === 2) {\r\n                      this.setState({\r\n                          winner: this.props.username2,\r\n                          score2: this.state.score2 + 1,\r\n                          gameOver: true\r\n                      })\r\n                  }\r\n                return board[r][c];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    checkHorizontally(board) {\r\n    for (let r = 3; r < 7; r++) {\r\n        for (let c = 0; c < 7; c++) {\r\n        if (board[r][c]) {\r\n            if (board[r][c] === board[r - 1][c] &&\r\n                board[r][c] === board[r - 2][c] &&\r\n                board[r][c] === board[r - 3][c]) {\r\n                if (this.state.playerTurn === 1) {\r\n                    this.setState({\r\n                      winner: this.props.username1,\r\n                      score1: this.state.score1 + 1,\r\n                      gameOver: true\r\n                    })\r\n                } else if (this.state.playerTurn === 2) {\r\n                    this.setState({\r\n                        winner: this.props.username2,\r\n                        score2: this.state.score2 + 1,\r\n                        gameOver: true\r\n                    })\r\n                }\r\n            return board[r][c];    \r\n            }\r\n        }\r\n        }\r\n    }\r\n    }\r\n    checkDiagonalLeft(board) {\r\n        for (let r = 3; r < 7; r++) {\r\n          for (let c = 0; c < 6; c++) {\r\n            if (board[r][c]) {\r\n              if (board[r][c] === board[r - 1][c + 1] &&\r\n                  board[r][c] === board[r - 2][c + 2] &&\r\n                  board[r][c] === board[r - 3][c + 3]) {\r\n                  if (this.state.playerTurn === 1) {\r\n                    this.setState({\r\n                      winner: this.props.username1,\r\n                      score1: this.state.score1 + 1,\r\n                      gameOver: true\r\n                    })\r\n                } else if (this.state.playerTurn === 2) {\r\n                    this.setState({\r\n                        winner: this.props.username2,\r\n                        score2: this.state.score2 + 1,\r\n                        gameOver: true\r\n                    })\r\n                }\r\n                return board[r][c];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      checkDiagonalRight(board) {\r\n        for (let r = 3; r < 7; r++) {\r\n          for (let c = 3; c < 7; c++) {\r\n            if (board[r][c]) {\r\n              if (board[r][c] === board[r - 1][c - 1] &&\r\n                  board[r][c] === board[r - 2][c - 2] &&\r\n                  board[r][c] === board[r - 3][c - 3]) {\r\n                  if (this.state.playerTurn === 1) {\r\n                    this.setState({\r\n                      winner: this.props.username1,\r\n                      score1: this.state.score1 + 1,\r\n                      gameOver: true\r\n                    })\r\n                } else if (this.state.playerTurn === 2) {\r\n                    this.setState({\r\n                        winner: this.props.username2,\r\n                        score2: this.state.score2 + 1,\r\n                        gameOver: true\r\n                    })\r\n                }\r\n                return board[r][c];\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n      checkDraw(board) {\r\n        for (let r = 0; r < 7; r++) {\r\n          for (let c = 0; c < 6; c++) {\r\n            if (board[r][c] === 0) {\r\n              console.log(\"DRAWINNER\")  \r\n              return null;\r\n            }\r\n          }\r\n        }\r\n        this.setState({\r\n          winner: \"draw\",\r\n          gameOver: true\r\n        })\r\n      }\r\n    onClick = (id) => {\r\n        let player = this.state.playerTurn; //Variable containing the state.player\r\n        let column = id; //Variable containing the id used as argument.\r\n        const table = [...this.state.board] //Spreadarray for the state.board\r\n        let newBoard = table[column] \r\n        let addLast = newBoard.lastIndexOf(0);\r\n        this.setState({\r\n            username1: this.props.username1,\r\n            username2: this.props.username2\r\n        })\r\n        if (addLast === -1) {\r\n            return;\r\n        }\r\n        newBoard[addLast] = player;\r\n\r\n        this.checkHorizontally(table);\r\n        this.checkVertically(table);\r\n        this.checkDiagonalLeft(table);\r\n        this.checkDiagonalRight(table);\r\n        this.checkDraw(table);\r\n        this.changePlayerTurn();\r\n    }\r\n    reset = () => {\r\n        console.log(\"Reset\");\r\n        this.setState({\r\n            winner: \"\",\r\n            gameOver: false,\r\n        })\r\n        this.startUp();\r\n    }\r\n    render() {\r\n        let board = this.state.board //Variable containing the state.board\r\n        if (this.state.winner === \"\") {     \r\n            return (\r\n            <>\r\n            <div className=\"boardContainer\"> {/* Div to contain the boardgame */}\r\n                <table>\r\n                    <tbody>\r\n                        {board.map(this.renderPlayerToken)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            </>\r\n            )\r\n        }\r\n        return (\r\n            <>\r\n            <Highscore \r\n            username1={this.state.username1}\r\n            username2={this.state.username2}\r\n            score1={this.state.score1}\r\n            score2={this.state.score2}\r\n            />\r\n            <div className=\"boardContainerScore disabled\"> {/* Div to contain the boardgame */}\r\n                <table>\r\n                    <tbody>\r\n                        {board.map(this.renderPlayerToken)}\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <Score \r\n            winner={this.state.winner}\r\n            />\r\n            <div className=\"game_reset\" onClick={this.reset}>\r\n\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}//End of Game\r\n\r\nexport default Game;","import React, { Component } from 'react';\r\nimport Game from \"../Game/Game.js\"\r\nimport \"./Login.css\";\r\n\r\nclass Login extends Component {\r\n    constructor(props){\r\n        super(props);\r\n        this.state={\r\n            username1: \"\",\r\n            username2: \"\",\r\n        }\r\n    }\r\n    setPlayer1 = (e) => {\r\n        this.setState({\r\n            username1: e.target.value\r\n        })\r\n    }\r\n    setPlayer2 = (e) => {\r\n        this.setState({\r\n            username2: e.target.value\r\n        })\r\n    }\r\n  render() {\r\n\r\n    if (this.state.username1 !== \"\" && this.state.username2 !== \"\") {\r\n    return (\r\n        <>\r\n        <div className=\"login_container\">\r\n            <form>\r\n                <label className=\"login_label\">X Name:</label>\r\n                <input \r\n                className=\"login_input\"\r\n                type=\"text\"\r\n                value={this.state.username1}\r\n                onChange={this.setPlayer1}\r\n                /><br/>\r\n                <label className=\"login_label\">O Name:</label>\r\n                <input \r\n                className=\"login_input\"\r\n                type=\"text\"\r\n                value={this.state.username2}\r\n                onChange={this.setPlayer2}\r\n                />\r\n            </form>\r\n        </div>\r\n        <Game \r\n        username1={this.state.username1} \r\n        username2={this.state.username2}\r\n        />\r\n        </>\r\n    );\r\n    }\r\n    return (\r\n                <>\r\n        <div className=\"login_container\">\r\n            <form>\r\n                <label className=\"login_label\">X Name:</label>\r\n                <input \r\n                className=\"login_input\"\r\n                type=\"text\"\r\n                value={this.state.username1}\r\n                onChange={this.setPlayer1}\r\n                /><br/>\r\n                <label className=\"login_label\">O Name:</label>\r\n                <input \r\n                className=\"login_input\"\r\n                type=\"text\"\r\n                value={this.state.username2}\r\n                onChange={this.setPlayer2}\r\n                />\r\n            </form>\r\n        </div>\r\n        </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Login;\r\n","import React, { Component } from 'react';\nimport Login from \"./Login/Login.js\"\nimport \"./App.css\";\n\nclass App extends Component {\n  render() {\n    return (\n        <div className=\"main_container\">\n          <Login />\n        </div>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}